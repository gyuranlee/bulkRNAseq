###################################################
############ 20240313 update by GR ################
############ bulk RNA-seq analysis ################
################# selected gene ###################
###################################################
### expression count table normalization 과정 까지는 똑같이 진행 해주세요! 

#######################################
############# heatmap 구현#############
#######################################

# heatmap에 표현할 유전자를 지정
############# file 불러오기 #############
# gene을 select 한 이후 저장한 파일 불러오기
# setwd() 로 마찬가지로 경로 지정 후 아래 불러올 파일 이후 경로 작성해주세요.
file = read.csv(file="", header=TRUE)

# 파일에서 중복된 gene name 제거 / 불러온 테이블 확인
dim(file)
file = file[-which(duplicated(file$ID)),] # 만약 input한 file에서 gene name이 나열된 column name이 ID가 아닌 다른 것이라면 ID자리에 그 column name을 입력해주세요.
namelist = file[c(0:1)] # gene name이 있는 column만 남기고 다른 column은 제거하는 과정입니다. 첫번째 컬럼이 gene name이 아닌 경우 삭제할 범위를 다르게 지정해주세요.
dim(namelist)

# 자료형 변환
vector <- unlist(namelist)
#selected.genes.df에 선별한 gene list 적용 
selected.genes.df = data.norm.table[vector,]

# normalization(expression수치 범위 너무 넓어서) + 전체 합 0인 행 제거하기
norm_selected.genes.df <- log10(selected.genes.df + 1)
selected.genes.df <- norm_selected.genes.df[which(rowSums(norm_selected.genes.df) != 0),]

# heatmap color 지정(바꾸려면 컬러차트 검색해서 추가, 제외 하면 됨.)
hmcol <- colorRampPalette(c("#B2182B", "#D6604D", "#F4A582", "#FDDBC7", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC"))(n = 10)
# heatmap 그리기
library(pheatmap)
pheatmap(selected.genes.df, scale = "row")

